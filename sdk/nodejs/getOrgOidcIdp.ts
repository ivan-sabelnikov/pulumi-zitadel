// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Datasource representing a generic OIDC IdP on the organization.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as zitadel from "@pulumi/zitadel";
 *
 * const orgOidcIdpOrgOidcIdp = zitadel.getOrgOidcIdp({
 *     orgId: data.zitadel_org.org.id,
 *     idpId: "177073612581240835",
 * });
 * export const orgOidcIdp = orgOidcIdpOrgOidcIdp;
 * ```
 */
export function getOrgOidcIdp(args: GetOrgOidcIdpArgs, opts?: pulumi.InvokeOptions): Promise<GetOrgOidcIdpResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("zitadel:index/getOrgOidcIdp:getOrgOidcIdp", {
        "idpId": args.idpId,
        "orgId": args.orgId,
    }, opts);
}

/**
 * A collection of arguments for invoking getOrgOidcIdp.
 */
export interface GetOrgOidcIdpArgs {
    /**
     * The ID of this resource.
     */
    idpId: string;
    /**
     * ID of the organization
     */
    orgId: string;
}

/**
 * A collection of values returned by getOrgOidcIdp.
 */
export interface GetOrgOidcIdpResult {
    /**
     * auto register for users from this idp
     */
    readonly autoRegister: boolean;
    /**
     * client id generated by the identity provider
     */
    readonly clientId: string;
    /**
     * client secret generated by the identity provider
     */
    readonly clientSecret: string;
    /**
     * definition which field is mapped to the display name of the user
     */
    readonly displayNameMapping: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The ID of this resource.
     */
    readonly idpId: string;
    /**
     * the oidc issuer of the identity provider
     */
    readonly issuer: string;
    /**
     * Name of the IDP
     */
    readonly name: string;
    /**
     * ID of the organization
     */
    readonly orgId: string;
    /**
     * the scopes requested by ZITADEL during the request on the identity provider
     */
    readonly scopes: string[];
    /**
     * Some identity providers specify the styling of the button to their login
     */
    readonly stylingType: string;
    /**
     * definition which field is mapped to the email of the user
     */
    readonly usernameMapping: string;
}

export function getOrgOidcIdpOutput(args: GetOrgOidcIdpOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetOrgOidcIdpResult> {
    return pulumi.output(args).apply(a => getOrgOidcIdp(a, opts))
}

/**
 * A collection of arguments for invoking getOrgOidcIdp.
 */
export interface GetOrgOidcIdpOutputArgs {
    /**
     * The ID of this resource.
     */
    idpId: pulumi.Input<string>;
    /**
     * ID of the organization
     */
    orgId: pulumi.Input<string>;
}
